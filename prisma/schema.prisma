// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tb_User {
  id        String       @id @unique @default(uuid())
  username  String
  email     String       @unique
  password  String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  guilds    Tb_Member[]
  messages  Tb_Message[]

  @@map("user")
}

model Tb_Guild {
  id          String       @id @unique @default(uuid())
  name        String
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  members     Tb_Member[]
  channels    Tb_Channel[]
}

model Tb_Member {
  id        String   @id @unique @default(uuid())
  nickname  String?
  role      Db_Role
  userId    String
  guildId   String
  user      Tb_User  @relation(fields: [userId], references: [id])
  guild     Tb_Guild @relation(fields: [guildId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Db_Role {
  ADMIN
  MEMBER
}

model Tb_Channel {
  id        String       @id @unique @default(uuid())
  name      String
  guildId   String
  guild     Tb_Guild     @relation(fields: [guildId], references: [id])
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  messages  Tb_Message[]
}

model Tb_Message {
  id        String     @id @unique @default(uuid())
  content   String
  userId    String
  channelId String
  user      Tb_User    @relation(fields: [userId], references: [id])
  channel   Tb_Channel @relation(fields: [channelId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
